{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","styles","btn","map","option","name","type","onClick","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","statistics","indicator","Notification","message","feedbackСhoice","Feedback","state","handleFeedback","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","percente","container","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oXAiBeA,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAOC,IAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAK,SACLC,QAASR,EAJX,SAMGK,GALIA,S,gBCGEI,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,oBAAIV,UAAWC,IAAOQ,MAAtB,SAA8BA,IAC7BC,M,gBCkBUC,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKhB,UAAWC,IAAOgB,WAAvB,UACE,uCACQ,sBAAMjB,UAAWC,IAAOiB,UAAxB,SAAoCN,OAE5C,0CACW,sBAAMZ,UAAWC,IAAOiB,UAAxB,SAAoCL,OAE/C,sCACO,sBAAMb,UAAWC,IAAOiB,UAAxB,SAAoCJ,OAE3C,wCACS,sBAAMd,UAAWC,IAAOiB,UAAxB,SAAoCH,OAE7C,mDAEE,uBAAMf,UAAWC,IAAOiB,UAAxB,UAAoCF,EAApC,c,iBCZSG,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGpB,UAAWC,IAAOmB,QAArB,SAA+BA,K,iBCI3BC,EAAiB,CAAC,OAAQ,UAAW,OAoD5BC,E,4MAjDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,eAAiB,gBAAanB,EAAb,EAAGoB,OAAUpB,KAAb,OACf,EAAKqB,SAAL,eAAiBrB,EAAO,EAAKkB,MAAMlB,GAAQ,K,EAE7CsB,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBc,gCAAkC,WAChC,IAAQhB,EAAS,EAAKW,MAAdX,KACFG,EAAQ,EAAKY,qBACnB,OAAOE,KAAKC,MAAOlB,EAAOG,EAAS,M,4CAGrC,WACE,MAA+BgB,KAAKR,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQgB,KAAKJ,qBACbK,EAAWD,KAAKH,kCACtB,OACE,sBAAK5B,UAAWC,IAAOgC,UAAvB,UACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASuB,EACTtB,gBAAiBgC,KAAKP,mBAG1B,cAAC,EAAD,CAASf,MAAM,aAAf,SACGM,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,mBAAoBgB,IAGtB,cAAC,EAAD,CAAcZ,QAAQ,+B,GA1CXc,aCERC,MARf,WACE,OACE,cAAC,WAAD,UACE,cAAC,EAAD,OCMSC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.34674313.chunk.js","sourcesContent":["import styles from './FeedbackOptions.module.scss';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.btn}>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        name=\"option\"\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import styles from './Section.module.scss';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n","import styles from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={styles.statistics}>\r\n    <p>\r\n      Good: <span className={styles.indicator}>{good}</span>\r\n    </p>\r\n    <p>\r\n      Neutral: <span className={styles.indicator}>{neutral}</span>\r\n    </p>\r\n    <p>\r\n      Bad: <span className={styles.indicator}>{bad}</span>\r\n    </p>\r\n    <p>\r\n      Total: <span className={styles.indicator}>{total}</span>\r\n    </p>\r\n    <p>\r\n      Positive Feedback:\r\n      <span className={styles.indicator}>{positivePercentage}%</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import styles from './Notification.module.scss';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Section from '../Section';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Notification';\r\nimport styles from './Feedback.module.scss';\r\n\r\nconst feedbackСhoice = ['good', 'neutral', 'bad'];\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedback = ({ target: { name } }) =>\r\n    this.setState({ [name]: this.state[name] + 1 });\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return Math.round((good / total) * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const percente = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <div className={styles.container}>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={feedbackСhoice}\r\n            onLeaveFeedback={this.handleFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              positivePercentage={percente}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import { Fragment } from 'react';\r\nimport Feedback from './components/Feedback';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Feedback />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}